<symbol name="SquareRoundThermalSymbol" id="sr_ths">
  <pattern><![CDATA[
  sr_ths([0-9.]+)x([0-9.]+)x([0-9.]+)x([0-9.]+)x([0-9.]+)
  ]]></pattern>

  <public_block><![CDATA[
  virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option,
      QWidget *widget);
  ]]></public_block>

  <private_block><![CDATA[
  qreal m_od;
  qreal m_id;
  qreal m_angle;
  int m_num_spokes;
  qreal m_gap;
  QPainterPath m_sub;
  ]]></private_block>

  <constructor><![CDATA[
  m_od = caps[1].toDouble() / 1000.0;
  m_id = caps[2].toDouble() / 1000.0;
  m_angle = caps[3].toDouble();
  m_num_spokes = caps[4].toInt();
  m_gap = caps[5].toDouble() / 1000.0;
  ]]></constructor>

  <painterPath><![CDATA[
  m_cachedPath.addRect(-m_od / 2, -m_od / 2, m_od, m_od);
  m_cachedPath.addEllipse(-m_id / 2, -m_id / 2, m_id, m_id);

  QPainterPath bar;
  bar.addRect(0, -m_gap / 2, m_od, m_gap);

  QMatrix mat;
  mat.rotate(-m_angle);

  qreal angle_div = 360.0 / m_num_spokes;

  m_sub = QPainterPath();
  for (int i = 0; i < m_num_spokes; ++i) {
    m_sub.addPath(mat.map(bar));
    mat.rotate(-angle_div);
  }

  // Simple subtraction will not work since QPainterPath::subtracted will
  // flatten the circle. We override paint to fix it.
  //m_cachedPath = m_cachedPath.subtracted(sub);
  ]]></painterPath>

  <function_body><![CDATA[
void SquareRoundThermalSymbol::paint(QPainter *painter,
    const QStyleOptionGraphicsItem *option, QWidget *widget)
{
  painterPath();

  if (m_polarity == P) {
    painter->setPen(m_pen);
    painter->setBrush(m_brush);
    painter->drawPath(m_cachedPath);

    painter->setPen(QPen(Qt::white, 0));
    painter->setBrush(Qt::white);
    painter->drawPath(m_sub);
  } else {
    painter->setPen(QPen(Qt::white, 0));
    painter->setBrush(Qt::white);
    painter->drawPath(m_cachedPath);

    painter->setPen(m_pen);
    painter->setBrush(m_brush);
    painter->drawPath(m_sub);
  }
}
  ]]></function_body>
</symbol>
