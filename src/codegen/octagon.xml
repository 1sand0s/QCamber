<symbol name="OctagonSymbol" id="oct">
  <pattern><![CDATA[
  oct([0-9.]+)x([0-9.]+)x([0-9.]+)
  ]]></pattern>

  <private_block><![CDATA[
  qreal m_w;
  qreal m_h;
  qreal m_r;
  ]]></private_block>

  <protected_block><![CDATA[
  void addOctagon(QPainterPath& path, const QRectF& rect, qreal corner,
    bool offset);
  ]]></protected_block>

  <constructor><![CDATA[
  m_w = caps[1].toDouble() / 1000.0;
  m_h = caps[2].toDouble() / 1000.0;
  m_r = caps[3].toDouble() / 1000.0;
  ]]></constructor>

  <boundingRect><![CDATA[
  return QRectF(-m_w / 2, -m_h / 2, m_w, m_h);
  ]]></boundingRect>

  <paint><![CDATA[
  painter->setPen(QPen(Qt::red, 0));
  painter->setBrush(Qt::red);
  QPainterPath path;
  addOctagon(path, QRectF(-m_w / 2, -m_h / 2, m_w, m_h), m_r, true);
  painter->drawPath(path);
  ]]></paint>

  <addShape><![CDATA[
  addOctagon(path, QRectF(-m_w / 2, -m_h / 2, m_w, m_h), m_r, false);
  ]]></addShape>

  <function_body><![CDATA[
void OctagonSymbol::addOctagon(QPainterPath& path, const QRectF& rect,
    qreal c, bool offset)
{
  QRectF r = rect.normalized();
  qreal ox = 0, oy = 0;

  if (r.isNull())
    return;

  if (offset) {
    ox = pos().x();
    oy = pos().y();
  }

  qreal x = ox + r.x();
  qreal y = oy + r.y();
  qreal w = r.width();
  qreal h = r.height();

  path.moveTo(x, y+h-c);
  path.lineTo(x, y+c);
  path.lineTo(x+c, y);
  path.lineTo(x+w-c, y);
  path.lineTo(x+w, y+c);
  path.lineTo(x+w, y+h-c);
  path.lineTo(x+w-c, y+h);
  path.lineTo(x+c, y+h);
  path.closeSubpath();
}
  ]]></function_body>
</symbol>
